 <link rel="import" href="../../iron-signals/iron-signals.html">
 <link rel="import" href="../gun.collection.html">
<dom-module id="demo-data">
	<template>
		<style>
			:host {
				display: block;
			}
		</style>
		 <iron-signals on-iron-signal-gun-loaded="_gunLoaded"></iron-signals> 
		 <gun-collection id="gc" name="Users" records="{{Users}}"></gun-collection>
	</template>
	<script>
		Polymer({
			is: 'demo-data',
			properties:{
				gc: {
					type: Object
				},
				msg: {
					type: String,
					value:"Starting Demo sequence...",
					notify:true
				},
				users: {
					type: Array,
					value: [,
					{name:'Mark',country:'USA'},
					{name:'Stef',country:'Netherlands'},
					{name:'Jesse',country:'USA'},
					{name:'Bob',country:'Belgium'},
					{name:'Joe',country:'USA'}
					]
				},
				records: {
					type:Array,
					value:[],
					notify:true
				},

				gunLoaded: {
					type: Boolean,
					value:false,
					observer:'_gunLoadedChanged'
				},
				timer: {
					type: Number,
					value:2000
				}
			},
			ready: function(){
				localStorage.clear()
			},
			_gunLoaded: function() {
				this.gunLoaded = true;
			
				this.pushCounter = 0;
			},
			_gunLoadedChanged:function() {
				if(this.gunLoaded) {
					this.gc = gun.get('GL/Users');
					this.setData();
				}
			},
			setData: function() {
				this.users.forEach(function(user,i){
						localStorage.clear();
					this.async(function(){
						this.pushRecord(user)
					},i*this.timer)
				}.bind(this));
			},
			pushRecord: function(data) {
					this.pushCounter = this.pushCounter + 1;
					this.msg = 'this.$.gc.createRecord({key:"'+data.name+'" ,data:{name:"'+data.name+'",country:"'+data.country+'"}})'
					data.Users=1;
					this.$.gc.createRecord({key:data.name,data:data})
					if(this.pushCounter == 5) {
						this.unTagData();
						//this.removeData()
					}
			},
			unTagData: function() {
				this.users.forEach(function(user,i){
					this.async(function(){
						this.unTagRecord(user.name)
					},i*this.timer)
				}.bind(this));
			},
			unTagRecord: function(name) {
				this.pushCounter = this.pushCounter - 1;
				this.msg = 'this.$.gc.unTagRecord("'+name+'")'
				this.$.gc.unTagRecord(name)
				if(this.pushCounter==0) {
					this.reTagData();
				}
			},
			reTagData:function() {
				this.users.forEach(function(user,i){
					this.async(function(){
						this.reTagRecord(user.name)
					},i*this.timer)
				}.bind(this));
			},
			reTagRecord: function(name) {
				this.pushCounter = this.pushCounter + 1;
				this.msg = 'this.$.gc.reTagRecord("'+name+'")'
				this.$.gc.reTagRecord(name)
				if(this.pushCounter==5) {
					this.updateData();
				}
			},
			updateData: function() {
				this.users.forEach(function(user,i){
					this.async(function(){
						this.updateRecord(user.name,{happy:true})
					},i*this.timer)
				}.bind(this));
			},
			updateRecord:function(key,data) {
				this.pushCounter = this.pushCounter - 1;
				this.msg = 'this.$.gc.updateRecord({key:"'+key+'",data:{happy:true}})'
				this.$.gc.updateRecord({key:key,data:data});
				if(this.pushCounter==0) {
					this.removeData();
				}
			},
			removeData: function() {
				this.users.forEach(function(user,i){
					this.async(function(){
						this.removeRecord(user.name)
					},i*this.timer)
				}.bind(this));
			},
			removeRecord: function(name) {
				this.pushCounter = this.pushCounter + 1;
				this.msg = 'this.$.gc.removeRecord("'+name+'")'
				this.$.gc.removeRecord(name)
				if(this.pushCounter==5) {
					this.pushCounter=0;
					this.finished();
				}
			},
			finished: function() {
				this.msg="All data is gone now! (Please refresh for new sequence)"
			}

		});
	</script>
</dom-module>